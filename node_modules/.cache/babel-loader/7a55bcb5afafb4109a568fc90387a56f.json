{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Klowdy\\\\Desktop\\\\ReactJS\\\\clima\\\\src\\\\components\\\\City.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function City(data) {\n  _s();\n\n  let city = \"Error\";\n  let [getCity, setCity] = useState();\n  setCity(() => {\n    getCity = city;\n\n    if (data.title !== undefined) {\n      city = data.title.toString();\n    } else if (data.title === undefined) {\n      city = \"Desconhecido!\";\n    }\n  }, []);\n  console.log(data.title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(City, \"x+8Eb8f21ySDScgpYt+KOsEVxQ0=\");\n\n_c = City;\n\nvar _c;\n\n$RefreshReg$(_c, \"City\");","map":{"version":3,"sources":["C:/Users/Klowdy/Desktop/ReactJS/clima/src/components/City.js"],"names":["useEffect","useState","City","data","city","getCity","setCity","title","undefined","toString","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAAA;;AAEvB,MAAIC,IAAI,GAAG,OAAX;AAEA,MAAI,CAACC,OAAD,EAAUC,OAAV,IAAqBL,QAAQ,EAAjC;AAEAK,EAAAA,OAAO,CAAC,MAAM;AACVD,IAAAA,OAAO,GAAGD,IAAV;;AAEA,QAAGD,IAAI,CAACI,KAAL,KAAeC,SAAlB,EAA6B;AACrBJ,MAAAA,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWE,QAAX,EAAP;AACP,KAFD,MAEO,IAAGN,IAAI,CAACI,KAAL,KAAeC,SAAlB,EAA6B;AAC5BJ,MAAAA,IAAI,GAAG,eAAP;AACP;AACJ,GARM,EAQJ,EARI,CAAP;AAYAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACI,KAAjB;AAGA,sBACA;AAAA,2BACI;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GA1BeF,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport function City(data) {\r\n    \r\n    let city = \"Error\";\r\n\r\n    let [getCity, setCity] = useState();\r\n\r\n    setCity(() => {\r\n        getCity = city;\r\n        \r\n        if(data.title !== undefined) {\r\n                city = data.title.toString();\r\n        } else if(data.title === undefined) {\r\n                city = \"Desconhecido!\";\r\n        }\r\n    }, []);\r\n    \r\n    \r\n    \r\n    console.log(data.title);\r\n    \r\n\r\n    return(\r\n    <div>\r\n        <p>{city}</p>\r\n    </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}